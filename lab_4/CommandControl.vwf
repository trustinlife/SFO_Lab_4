/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Input_AB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Input_CB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Input_DB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Load_IP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MemoryAccess")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Output_AB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Output_CB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Output_DB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RAM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Read_AR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Read_DR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Read_IR0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Read_IR1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Read_IR2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RegistersAccess")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ROM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Write")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Write_AR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Write_DR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Write_IR0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Write_IR1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Write_IR2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PickCommand")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IncIP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("Input_AB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Input_CB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Input_DB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12.774;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 27.226;
	}
}

TRANSITION_LIST("Load_IP")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MemoryAccess")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13.538;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 26.462;
	}
}

TRANSITION_LIST("Output_AB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13.82;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 26.18;
	}
}

TRANSITION_LIST("Output_CB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Output_DB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("RAM")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Read")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13.56;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 26.44;
	}
}

TRANSITION_LIST("Read_AR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13.82;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 26.18;
	}
}

TRANSITION_LIST("Read_DR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62.443;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.014;
			LEVEL 0 FOR 9.819;
			LEVEL 1 FOR 0.181;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 9.581;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 0.238;
			LEVEL 0 FOR 60.167;
		}
		LEVEL 1 FOR 10.014;
		LEVEL 0 FOR 9.819;
		LEVEL 1 FOR 0.181;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 9.581;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 0.238;
		LEVEL 0 FOR 37.724;
	}
}

TRANSITION_LIST("Read_IR0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 123.403;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 19.868;
			LEVEL 0 FOR 0.316;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 129.816;
		}
		LEVEL 1 FOR 19.868;
		LEVEL 0 FOR 0.316;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 46.413;
	}
}

TRANSITION_LIST("Read_IR1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Read_IR2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("RegistersAccess")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ROM")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12.865;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 27.135;
	}
}

TRANSITION_LIST("Write")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Write_AR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 13.088;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 50.216;
			LEVEL 1 FOR 9.784;
			LEVEL 0 FOR 10.216;
			LEVEL 1 FOR 0.136;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 9.648;
		}
		LEVEL 0 FOR 26.912;
	}
}

TRANSITION_LIST("Write_DR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12.774;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9.846;
		LEVEL 1 FOR 0.154;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.846;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 49.846;
		LEVEL 1 FOR 0.136;
		LEVEL 0 FOR 10.018;
		LEVEL 1 FOR 27.226;
	}
}

TRANSITION_LIST("Write_IR0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62.309;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 9.772;
			LEVEL 0 FOR 150.228;
		}
		LEVEL 1 FOR 9.772;
		LEVEL 0 FOR 127.919;
	}
}

TRANSITION_LIST("Write_IR1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 63.054;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 9.772;
			LEVEL 0 FOR 150.228;
		}
		LEVEL 1 FOR 9.772;
		LEVEL 0 FOR 127.174;
	}
}

TRANSITION_LIST("Write_IR2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 112.918;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.108;
			LEVEL 0 FOR 149.892;
		}
		LEVEL 1 FOR 10.108;
		LEVEL 0 FOR 76.974;
	}
}

TRANSITION_LIST("PickCommand")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 12.322;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 50.216;
			LEVEL 1 FOR 9.784;
			LEVEL 0 FOR 10.216;
			LEVEL 1 FOR 0.136;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 9.648;
		}
		LEVEL 0 FOR 27.678;
	}
}

TRANSITION_LIST("IncIP")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 52.787;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.109;
			LEVEL 0 FOR 89.891;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.109;
		LEVEL 0 FOR 77.104;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Input_AB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Input_CB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Input_DB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Load_IP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAccess";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Output_AB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Output_CB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Output_DB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RAM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Read_AR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Read_DR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Read_IR0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Read_IR1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Read_IR2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RegistersAccess";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ROM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Write_AR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Write_DR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Write_IR0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Write_IR1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Write_IR2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PickCommand";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IncIP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 530000;
	MASTER = TRUE;
}
;
