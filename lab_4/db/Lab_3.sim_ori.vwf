/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 3000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("AddressOUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AddressOUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressOUT";
}

SIGNAL("AddressOUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressOUT";
}

SIGNAL("AddressOUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressOUT";
}

SIGNAL("AddressOUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressOUT";
}

SIGNAL("AddressOUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressOUT";
}

SIGNAL("AddressOUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressOUT";
}

SIGNAL("AddressOUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressOUT";
}

SIGNAL("AddressOUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressOUT";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DataOUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DataOUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataOUT";
}

SIGNAL("DataOUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataOUT";
}

SIGNAL("DataOUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataOUT";
}

SIGNAL("DataOUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataOUT";
}

SIGNAL("DataOUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataOUT";
}

SIGNAL("DataOUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataOUT";
}

SIGNAL("DataOUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataOUT";
}

SIGNAL("DataOUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataOUT";
}

SIGNAL("Start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DataIN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DataIN[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataIN";
}

SIGNAL("DataIN[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataIN";
}

SIGNAL("DataIN[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataIN";
}

SIGNAL("DataIN[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataIN";
}

SIGNAL("DataIN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataIN";
}

SIGNAL("DataIN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataIN";
}

SIGNAL("DataIN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataIN";
}

SIGNAL("DataIN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DataIN";
}

SIGNAL("Contr[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Contr[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Contr[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Contr[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Contr[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Contr[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Contr[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Contr[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Contr[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IP[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("DR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR";
}

SIGNAL("DR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR";
}

SIGNAL("DR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR";
}

SIGNAL("DR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR";
}

SIGNAL("DR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR";
}

SIGNAL("DR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR";
}

SIGNAL("DR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR";
}

SIGNAL("DR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR";
}

SIGNAL("IR0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IR0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR0";
}

SIGNAL("IR0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR0";
}

SIGNAL("IR0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR0";
}

SIGNAL("IR0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR0";
}

SIGNAL("AllowCount")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("AR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AR";
}

SIGNAL("PickCom")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("AddressOUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 110.0;
			}
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AddressOUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 110.0;
			}
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AddressOUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 110.0;
			}
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AddressOUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 110.0;
			}
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AddressOUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AddressOUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL Z FOR 110.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 110.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AddressOUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 110.0;
			}
		}
		LEVEL 1 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AddressOUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 100.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 1 FOR 40.0;
				LEVEL Z FOR 110.0;
			}
		}
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("DataOUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 245.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL X FOR 40.0;
		LEVEL Z FOR 455.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataOUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 245.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL X FOR 40.0;
		LEVEL Z FOR 455.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataOUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 245.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL X FOR 40.0;
		LEVEL Z FOR 455.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataOUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 245.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL X FOR 40.0;
		LEVEL Z FOR 455.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataOUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 245.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL X FOR 40.0;
		LEVEL Z FOR 455.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataOUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 245.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL X FOR 40.0;
		LEVEL Z FOR 455.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataOUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 245.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL X FOR 40.0;
		LEVEL Z FOR 455.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataOUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 245.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL X FOR 40.0;
		LEVEL Z FOR 455.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("Start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 3980.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 980.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 980.0;
		}
	}
}

TRANSITION_LIST("DataIN[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL X FOR 80.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 110.0;
			}
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL X FOR 80.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataIN[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL X FOR 80.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 110.0;
			}
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL X FOR 80.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataIN[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL X FOR 80.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 110.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL X FOR 80.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 110.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataIN[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 60.0;
			LEVEL X FOR 80.0;
			LEVEL Z FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 110.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataIN[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL X FOR 80.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataIN[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL X FOR 80.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL Z FOR 110.0;
			}
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL X FOR 80.0;
			LEVEL Z FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 110.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataIN[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DataIN[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 60.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("Contr[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 110.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 110.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("Contr[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 150.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 110.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 150.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 110.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("Contr[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 110.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 110.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("Contr[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 205.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 630.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 495.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("Contr[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 205.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 630.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 495.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("Contr[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 205.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 495.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("Contr[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 205.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 495.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("Contr[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 205.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 495.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("Contr[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 205.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 630.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 495.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IP[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 705.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 200.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 450.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 65.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IP[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 705.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 200.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 450.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 65.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IP[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 705.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 200.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 450.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 65.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IP[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 705.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 200.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 450.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 65.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IP[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 705.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 10.0;
			LEVEL 1 FOR 200.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 450.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 65.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IP[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 395.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 310.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 200.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 310.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 65.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IP[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 145.0;
		LEVEL 1 FOR 250.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 250.0;
			LEVEL 1 FOR 60.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 60.0;
			LEVEL X FOR 10.0;
			LEVEL 1 FOR 140.0;
		}
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 65.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IP[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 190.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 60.0;
				LEVEL 0 FOR 60.0;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 80.0;
			}
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 190.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 65.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL X FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 150.0;
			LEVEL X FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 200.0;
				LEVEL X FOR 10.0;
			}
			LEVEL 0 FOR 150.0;
			LEVEL X FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 200.0;
			LEVEL X FOR 10.0;
		}
		LEVEL 0 FOR 150.0;
		LEVEL X FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL X FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 150.0;
			LEVEL X FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 200.0;
				LEVEL X FOR 10.0;
			}
			LEVEL 0 FOR 150.0;
			LEVEL X FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 200.0;
			LEVEL X FOR 10.0;
		}
		LEVEL 0 FOR 150.0;
		LEVEL X FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 200.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL X FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 190.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL X FOR 100.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 80.0;
			LEVEL X FOR 100.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 200.0;
				LEVEL X FOR 10.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL X FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 150.0;
			LEVEL X FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 130.0;
			LEVEL X FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 150.0;
			LEVEL X FOR 100.0;
		}
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 130.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 190.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL X FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 150.0;
			LEVEL X FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 200.0;
				LEVEL X FOR 10.0;
			}
			LEVEL 0 FOR 150.0;
			LEVEL X FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 200.0;
			LEVEL X FOR 10.0;
		}
		LEVEL 0 FOR 150.0;
		LEVEL X FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL X FOR 100.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 100.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 130.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 190.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 100.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 130.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 190.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 100.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 130.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 190.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 100.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 130.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 190.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("DR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 140.0;
		LEVEL X FOR 100.0;
		LEVEL 1 FOR 70.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 80.0;
			LEVEL X FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 200.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 190.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IR0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 200.0;
			}
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 240.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 175.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IR0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 200.0;
			}
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 240.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 175.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IR0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL X FOR 10.0;
				LEVEL 1 FOR 200.0;
			}
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 240.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 175.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("IR0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 200.0;
			}
			LEVEL X FOR 10.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 240.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 175.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AllowCount")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 205.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 170.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 170.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 170.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 170.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 35.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 50.0;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 140.0;
			}
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 50.0;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 140.0;
			}
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 50.0;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 140.0;
			}
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 50.0;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 140.0;
			}
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 140.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 10.0;
			LEVEL 1 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 1 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 1 FOR 70.0;
			NODE
			{
				REPEAT = 2;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 50.0;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 140.0;
			}
		}
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("AR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 70.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL X FOR 10.0;
			LEVEL 1 FOR 100.0;
			LEVEL X FOR 10.0;
			LEVEL 0 FOR 70.0;
			NODE
			{
				REPEAT = 2;
				LEVEL X FOR 10.0;
				LEVEL 0 FOR 50.0;
				LEVEL X FOR 10.0;
				LEVEL 1 FOR 140.0;
			}
		}
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

TRANSITION_LIST("PickCom")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 180.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 140.0;
			}
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 180.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL X FOR 7000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AddressOUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "AddressOUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AddressOUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AddressOUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AddressOUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AddressOUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AddressOUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AddressOUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AddressOUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DataOUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "DataOUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DataOUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DataOUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DataOUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DataOUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DataOUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DataOUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DataOUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DataIN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "DataIN[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "DataIN[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "DataIN[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "DataIN[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "DataIN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "DataIN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "DataIN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "DataIN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "IP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "IP[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "IP[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "IP[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "IP[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "IP[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "IP[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "IP[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "IP[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "Contr[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Contr[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Contr[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Contr[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Contr[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Contr[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Contr[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Contr[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Contr[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
	CHILDREN = 48, 49, 50, 51, 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "DR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "DR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "DR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "DR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "DR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "DR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "DR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "DR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "IR0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
	CHILDREN = 57, 58, 59, 60;
}

DISPLAY_LINE
{
	CHANNEL = "IR0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "IR0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "IR0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "IR0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "AR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
	CHILDREN = 62, 63, 64, 65, 66, 67, 68, 69;
}

DISPLAY_LINE
{
	CHANNEL = "AR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "AR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "AR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "AR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "AR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "AR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "AR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "AR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "AllowCount";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PickCom";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 15075;
	MASTER = TRUE;
}
;
